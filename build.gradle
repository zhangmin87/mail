buildscript {
    repositories {
        mavenCentral()
    }
}


//添加java和maven 插件，可以使用两者的相关配置
apply plugin: 'java'//添加java 组件
apply plugin: 'war' //添加war 组件


sourceCompatibility = 1.8
targetCompatibility = 1.8




tasks.withType(JavaCompile) {

    options.encoding ="UTF-8"

}


// 配置gradle 使用
// java plugin生成compile 和testCompile，分别用于
//编译java  测试源文件，另外，jvava Plugin 还定义了
//runtime 和testRuntime 这两个Configuration,分别用于
//程序运行和测试后运行时候加入到配置的依赖，
//如果存在依赖冲突,在默认情况下，Gradle会选择最新版本
//
// 为什么要提供私服，有些公司不提供外网给项目组成员，因此，就不能使用maven 访问远程
// 所以，很有必要再局域网里找一台有外网权限的机器，搭建nexus 私服，然后开发人员连接到这台电话上，这样的话，就
//就可以通过，这台搭建了nexus 私服电脑访问maven 的远程仓库
//到此，完成了nexus私服的搭建，项目组开发人员开发时，只要在项目的pom.xml文件中，添加如下pom.xml信息即可获取私服的jar.
//
// 如果添加其他的构件时，会先在nexus私服下载好，以后才会下载到本地。以后，如果发现私服已经存在某一jar包，则会直接从私服下载，如果没有再去网络上下载。这就是搭建私服的好处。哈哈........
//
//所以很有必要搭建maven私服。
//
//

repositories {
    mavenCentral()
}



ext {
    frameworkExtVersion         = '2.0.0-SNAPSHOT'
    frameworkVersion            = '2.0.0'
    ssoclientVersion            = '1.0.0'
    junitVersion                = '4.12'
    ojdbcVersion                = '14.10'
    antlrVersion                = '2.7.7'
    aopallianceVersion          = '1.0'
    aspectjweaverVersion        = '1.8.9'
    log4j2Version               = '2.4.1'
    log4jVersion                = '1.2.17'
    slf4jVersion                = '1.7.21'
    springframeworkVersion      = '4.2.6.RELEASE'
    springdataVersion           = '1.7.2.RELEASE'
    springsecurityVersion       = '4.2.1.RELEASE'
    c3p0Version                 = '0.9.1.2'
    hibernateVersion            = '5.2.4.Final'
    hibernateValidatorVersion   = '5.2.4.Final'
    mybatisVersion              = '3.3.0'
    mybatisSpringVersion        = '1.3.0'
    ibatisVersion               = '2.3.4.726'
    hessianVersion              = '3.1.5'
    gsonVersion                 = '2.3.1'
    jacksonVersion              = '2.8.0.rc1'
    fastjsonVersion             = '1.2.12'
    velocityVersion             = '1.7'
    velocityToolsVersion        = '2.0'
    freemarkVersion             = '2.3.23'
    servletVersion              = '2.4'
    jspVersion                  = '2.0'
    jstlVersion                 = '1.2'
    dubboVersion                = '2.8.4'
    zookeeperVersion            = '3.4.6'
    zkclientVersion             = '0.1'
    curatorVersion              = '2.11.0'
    jsr303Version               = '1.1.0.Final'
    activemqVersion             = '5.13.3'
    jmsVersion                  = '2.0.1'
    jedisVersion                = '2.8.1'
    spymemcachedVersion         = '2.12.0'
    ehcacheVersion              = '2.6.11'
    coherenceVersion            = '3'
    quartzVersion               = '2.2.3'
    javamailVersion             = '1.5.6'
    nettyVersion                = '3.10.5.Final'
    poiVersion                  = '3.15'
    apacheLangVersion           = '3.5'
    apacheCollectionsVersion    = '4.1'
    apacheNetVersion            = '3.3'
}


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
// 依赖的Lib
dependencies {
    compile 'com.alibaba:druid:1.0.15'
    // Log APIs (Slf4j & Log4j2 & commons-logging)
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    // springframework
    compile "org.springframework:spring-aop:$springframeworkVersion"
    compile "org.springframework:spring-aspects:$springframeworkVersion"
    compile "org.springframework:spring-beans:$springframeworkVersion"
    compile "org.springframework:spring-context:$springframeworkVersion"
    compile "org.springframework:spring-context-support:$springframeworkVersion"
    compile "org.springframework:spring-core:$springframeworkVersion"
    compile "org.springframework:spring-expression:$springframeworkVersion"
    compile "org.springframework:spring-jdbc:$springframeworkVersion"
    compile "org.springframework:spring-jms:$springframeworkVersion"
    compile "org.springframework:spring-orm:$springframeworkVersion"
    compile "org.springframework:spring-oxm:$springframeworkVersion"
    compile "org.springframework:spring-tx:$springframeworkVersion"
    compile "org.springframework:spring-webmvc:$springframeworkVersion"
    compile "org.springframework:spring-web:$springframeworkVersion"

    compile 'com.alibaba:druid:1.0.15'


    compile "jstl:jstl:$jstlVersion"

    compile "com.github.livesense:org.liveSense.scripting.jsp.taglib.jsonatg:1.0.5"

    // Apache Commons
    compile "org.apache.commons:commons-lang3:$apacheLangVersion"
    compile "commons-net:commons-net:3.3"

    // jackson
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"

    // JSP & Servlet
    providedCompile "javax.servlet:servlet-api:$servletVersion"
    providedCompile "javax.servlet:jsp-api:$jspVersion"

    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    compile "com.github.sgroschupf:zkclient:$zkclientVersion"

    // dangdang config-toolkit & apache curator
    compile "com.dangdang:config-common:3.0.0-RELEASE"
    compile "com.dangdang:config-toolkit:3.2.2-RELEASE"
}
dependencies {
    compile fileTree(dir:'lib',includes: ['*.jar'])
}
