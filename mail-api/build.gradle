buildscript {
    repositories {
        mavenCentral()
    }
}


group '15'
version '1.0-SNAPSHOT'

//添加java和maven 插件，可以使用两者的相关配置
apply plugin: 'java'//添加java 组件
apply plugin: 'war' //添加war 组件
//apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8




tasks.withType(JavaCompile) {

    options.encoding ="UTF-8"

}


// 配置gradle 使用
// java plugin生成compile 和testCompile，分别用于
//编译java  测试源文件，另外，jvava Plugin 还定义了
//runtime 和testRuntime 这两个Configuration,分别用于
//程序运行和测试后运行时候加入到配置的依赖，
//如果存在依赖冲突,在默认情况下，Gradle会选择最新版本
//
// 为什么要提供私服，有些公司不提供外网给项目组成员，因此，就不能使用maven 访问远程
// 所以，很有必要再局域网里找一台有外网权限的机器，搭建nexus 私服，然后开发人员连接到这台电话上，这样的话，就
//就可以通过，这台搭建了nexus 私服电脑访问maven 的远程仓库
//到此，完成了nexus私服的搭建，项目组开发人员开发时，只要在项目的pom.xml文件中，添加如下pom.xml信息即可获取私服的jar.
//
// 如果添加其他的构件时，会先在nexus私服下载好，以后才会下载到本地。以后，如果发现私服已经存在某一jar包，则会直接从私服下载，如果没有再去网络上下载。这就是搭建私服的好处。哈哈........
//
//所以很有必要搭建maven私服。
//
//

repositories {
    mavenCentral()
}



dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}
// 依赖的Lib
dependencies {
    // c3p0

    // Quartz


//    // JSP & Servlet
//    providedCompile "javax.servlet:servlet-api:$servletVersion"
//    providedCompile "javax.servlet:jsp-api:$jspVersion"
    // JPA & JSR303 Api & Hibernate Impl

    // Dubbox
//    compile "com.alibaba:dubbo:2.5.3"
//    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
//    compile "com.github.sgroschupf:zkclient:$zkclientVersion"

    // dangdang config-toolkit & apache curator
//    compile "com.dangdang:config-common:3.0.0-RELEASE"
//    compile "com.dangdang:config-toolkit:3.2.2-RELEASE"
//    compile "org.apache.curator:curator-recipes:$curatorVersion"

}


//configurations {
//    compile { transitive = true }
//    runtime { transitive = true }
//}
//
//mainClassName = "com.alibaba.dubbo.container.Main"

//加载本地
/***
 *对本地jar 的依赖配置
 *如果不知道jar 包的远程仓库地址
 * 而项目中又要使用jar包，就需要进行本地设置
 * 例如：需要使用的jar包为siar.jar ，则需要在项目
 * 根目录下建目录：libs，并把sigar.jar 放到该目录中
 * 同时在
 */
//dependencies {
//    compile fileTree(dir:'lib',includes: ['*.jar'])
//}



