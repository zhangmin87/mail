
group '15'
version '1.0-SNAPSHOT'

//添加java和maven 插件，可以使用两者的相关配置
apply plugin: 'java'//添加java 组件
apply plugin: 'war' //添加war 组件
//apply plugin: 'application'

tasks.withType(JavaCompile) {

    options.encoding ="UTF-8"

}


// 配置gradle 使用
// java plugin生成compile 和testCompile，分别用于
//编译java  测试源文件，另外，jvava Plugin 还定义了
//runtime 和testRuntime 这两个Configuration,分别用于
//程序运行和测试后运行时候加入到配置的依赖，
//如果存在依赖冲突,在默认情况下，Gradle会选择最新版本
//
// 为什么要提供私服，有些公司不提供外网给项目组成员，因此，就不能使用maven 访问远程
// 所以，很有必要再局域网里找一台有外网权限的机器，搭建nexus 私服，然后开发人员连接到这台电话上，这样的话，就
//就可以通过，这台搭建了nexus 私服电脑访问maven 的远程仓库
//到此，完成了nexus私服的搭建，项目组开发人员开发时，只要在项目的pom.xml文件中，添加如下pom.xml信息即可获取私服的jar.
//
// 如果添加其他的构件时，会先在nexus私服下载好，以后才会下载到本地。以后，如果发现私服已经存在某一jar包，则会直接从私服下载，如果没有再去网络上下载。这就是搭建私服的好处。哈哈........
//
//所以很有必要搭建maven私服。
//
//

repositories {
    mavenCentral()
}
repositories {
    maven { url "http://dev.infoccsp.com/nexus/content/groups/public/"}
}

// 依赖的Lib
dependencies {
    compile 'com.alibaba:druid:1.0.15'

//    // JSP & Servlet
//    compile "javax.servlet:servlet-api:$servletVersion"
//    compile "javax.servlet:jsp-api:$jspVersion"

    compile project(':mail-api')
    // Log APIs (Slf4j & Log4j2 & commons-logging)
    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "log4j:log4j:$log4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    // springframework
    compile "org.springframework:spring-aop:$springframeworkVersion"
    compile "org.springframework:spring-aspects:$springframeworkVersion"
    compile "org.springframework:spring-beans:$springframeworkVersion"
    compile "org.springframework:spring-context:$springframeworkVersion"
    compile "org.springframework:spring-context-support:$springframeworkVersion"
    compile "org.springframework:spring-core:$springframeworkVersion"
    compile "org.springframework:spring-expression:$springframeworkVersion"
    compile "org.springframework:spring-jdbc:$springframeworkVersion"
    compile "org.springframework:spring-jms:$springframeworkVersion"
    compile "org.springframework:spring-orm:$springframeworkVersion"
    compile "org.springframework:spring-oxm:$springframeworkVersion"
    compile "org.springframework:spring-tx:$springframeworkVersion"
    compile "org.springframework:spring-webmvc:$springframeworkVersion"
    compile "org.springframework:spring-web:$springframeworkVersion"

    compile 'org.aspectj:aspectjweaver:1.8.6'
    compile 'mysql:mysql-connector-java:5.1.36'
    compile 'junit:junit:4.12'
    compile 'org.springframework:spring-test:4.0.5.RELEASE'
    compile 'commons-dbcp:commons-dbcp:1.4'

    // poi
    compile "org.apache.poi:poi-ooxml:$poiVersion"
    compile "org.apache.poi:poi-ooxml-schemas:$poiVersion"


    compile "jstl:jstl:$jstlVersion"
    // jsontag
    compile "com.github.livesense:org.liveSense.scripting.jsp.taglib.jsonatg:1.0.5"

    // Tiles
    compile "org.apache.tiles:tiles-core:3.0.7"
    compile "org.apache.tiles:tiles-api:3.0.7"
    compile "org.apache.tiles:tiles-jsp:3.0.7"
    compile "org.apache.tiles:tiles-servlet:3.0.7"
    compile "org.apache.tiles:tiles-template:3.0.7"
    compile "org.apache.tiles:tiles-request-servlet:1.0.6"
    compile "org.apache.tiles:tiles-request-api:1.0.6"
    compile "org.apache.tiles:tiles-request-jsp:1.0.6"
    compile "org.apache.tiles:tiles-autotag-core-runtime:1.2"
    compile "commons-digester:commons-digester:2.0"
    compile "commons-beanutils:commons-beanutils:1.9.3"
    // Apache Commons
    compile "org.apache.commons:commons-lang3:$apacheLangVersion"
    compile "commons-net:commons-net:3.3"

    // jackson
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    // framework-core
    // JSP & Servlet
    providedCompile "javax.servlet:servlet-api:$servletVersion"
    providedCompile "javax.servlet:jsp-api:$jspVersion"
    // JPA & JSR303 Api & Hibernate Impl
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final"
    compile "javax.validation:validation-api:$jsr303Version"
    compile "org.hibernate:hibernate-validator:$hibernateValidatorVersion"
    
    compile "org.hibernate.common:hibernate-commons-annotations:5.0.1.Final"
    // Mybatis & IBatis APIs
    // Mybatis & IBatis APIs
    compile "org.mybatis:mybatis:$mybatisVersion"
    compile "org.mybatis:mybatis-spring:$mybatisSpringVersion"
    // fileupload
    compile "commons-fileupload:commons-fileupload:1.3.2"
    compile "javax.jms:javax.jms-api:$jmsVersion"
    compile "org.apache.activemq:activemq-pool:$activemqVersion"
    compile "org.apache.activemq:activemq-client:$activemqVersion"
    //--------------------------------------------------------------------------------------------分割线
    //dubbo   这里使用的是dubbo 2.5.4


    compile "com.alibaba:dubbo:$dubboVersion"
    compile "org.apache.zookeeper:zookeeper:$zookeeperVersion"
    compile "com.github.sgroschupf:zkclient:$zkclientVersion"
    compile "javax.el:javax.el-api:2.2.4"
    compile "org.glassfish.web:javax.el:2.2.4"
//
//    //dangdang config-toolkit & apache curator
//    compile "com.dangdang:config-common:3.0.0-RELEASE"
//    compile "com.dangdang:config-toolkit:3.2.2-RELEASE"
//    compile "org.apache.curator:curator-recipes:$curatorVersion"
}



